var aftermath;
(function (aftermath) {
    (function (expressions) {
        (function (nodeType) {
            nodeType._map = [];
            nodeType._map[0] = "identifier";
            nodeType.identifier = 0;
            nodeType._map[1] = "add";
            nodeType.add = 1;
            nodeType._map[2] = "and";
            nodeType.and = 2;
            nodeType._map[3] = "call";
            nodeType.call = 3;
            nodeType._map[4] = "constant";
            nodeType.constant = 4;
            nodeType._map[5] = "divide";
            nodeType.divide = 5;
            nodeType._map[6] = "equal";
            nodeType.equal = 6;
            nodeType._map[7] = "greaterThan";
            nodeType.greaterThan = 7;
            nodeType._map[8] = "greaterThanOrEqual";
            nodeType.greaterThanOrEqual = 8;
            nodeType._map[9] = "lambda";
            nodeType.lambda = 9;
            nodeType._map[10] = "lessThan";
            nodeType.lessThan = 10;
            nodeType._map[11] = "lessThanOrEqual";
            nodeType.lessThanOrEqual = 11;
            nodeType._map[12] = "memberAccess";
            nodeType.memberAccess = 12;
            nodeType._map[13] = "modulo";
            nodeType.modulo = 13;
            nodeType._map[14] = "multiply";
            nodeType.multiply = 14;
            nodeType._map[15] = "negate";
            nodeType.negate = 15;
            nodeType._map[16] = "not";
            nodeType.not = 16;
            nodeType._map[17] = "notEqual";
            nodeType.notEqual = 17;
            nodeType._map[18] = "or";
            nodeType.or = 18;
            nodeType._map[19] = "parameter";
            nodeType.parameter = 19;
            nodeType._map[20] = "power";
            nodeType.power = 20;
            nodeType._map[21] = "subtract";
            nodeType.subtract = 21;
            nodeType._map[22] = "AddChecked";
            nodeType.AddChecked = 22;
            nodeType._map[23] = "AndAlso";
            nodeType.AndAlso = 23;
            nodeType._map[24] = "ArrayLength";
            nodeType.ArrayLength = 24;
            nodeType._map[25] = "ArrayIndex";
            nodeType.ArrayIndex = 25;
            nodeType._map[26] = "Coalesce";
            nodeType.Coalesce = 26;
            nodeType._map[27] = "Conditional";
            nodeType.Conditional = 27;
            nodeType._map[28] = "Convert";
            nodeType.Convert = 28;
            nodeType._map[29] = "ConvertChecked";
            nodeType.ConvertChecked = 29;
            nodeType._map[30] = "ExclusiveOr";
            nodeType.ExclusiveOr = 30;
            nodeType._map[31] = "Invoke";
            nodeType.Invoke = 31;
            nodeType._map[32] = "LeftShift";
            nodeType.LeftShift = 32;
            nodeType._map[33] = "ListInit";
            nodeType.ListInit = 33;
            nodeType._map[34] = "MemberInit";
            nodeType.MemberInit = 34;
            nodeType._map[35] = "MultiplyChecked";
            nodeType.MultiplyChecked = 35;
            nodeType._map[36] = "UnaryPlus";
            nodeType.UnaryPlus = 36;
            nodeType._map[37] = "NegateChecked";
            nodeType.NegateChecked = 37;
            nodeType._map[38] = "New";
            nodeType.New = 38;
            nodeType._map[39] = "NewArrayInit";
            nodeType.NewArrayInit = 39;
            nodeType._map[40] = "NewArrayBounds";
            nodeType.NewArrayBounds = 40;
            nodeType._map[41] = "OrElse";
            nodeType.OrElse = 41;
            nodeType._map[42] = "Quote";
            nodeType.Quote = 42;
            nodeType._map[43] = "RightShift";
            nodeType.RightShift = 43;
            nodeType._map[44] = "SubtractChecked";
            nodeType.SubtractChecked = 44;
            nodeType._map[45] = "TypeAs";
            nodeType.TypeAs = 45;
            nodeType._map[46] = "TypeIs";
            nodeType.TypeIs = 46;
            nodeType._map[47] = "Assign";
            nodeType.Assign = 47;
            nodeType._map[48] = "Block";
            nodeType.Block = 48;
            nodeType._map[49] = "DebugInfo";
            nodeType.DebugInfo = 49;
            nodeType._map[50] = "Decrement";
            nodeType.Decrement = 50;
            nodeType._map[51] = "Dynamic";
            nodeType.Dynamic = 51;
            nodeType._map[52] = "Default";
            nodeType.Default = 52;
            nodeType._map[53] = "Extension";
            nodeType.Extension = 53;
            nodeType._map[54] = "Goto";
            nodeType.Goto = 54;
            nodeType._map[55] = "Increment";
            nodeType.Increment = 55;
            nodeType._map[56] = "Index";
            nodeType.Index = 56;
            nodeType._map[57] = "Label";
            nodeType.Label = 57;
            nodeType._map[58] = "RuntimeVariables";
            nodeType.RuntimeVariables = 58;
            nodeType._map[59] = "Loop";
            nodeType.Loop = 59;
            nodeType._map[60] = "Switch";
            nodeType.Switch = 60;
            nodeType._map[61] = "Throw";
            nodeType.Throw = 61;
            nodeType._map[62] = "Try";
            nodeType.Try = 62;
            nodeType._map[63] = "Unbox";
            nodeType.Unbox = 63;
            nodeType._map[64] = "AddAssign";
            nodeType.AddAssign = 64;
            nodeType._map[65] = "AndAssign";
            nodeType.AndAssign = 65;
            nodeType._map[66] = "DivideAssign";
            nodeType.DivideAssign = 66;
            nodeType._map[67] = "ExclusiveOrAssign";
            nodeType.ExclusiveOrAssign = 67;
            nodeType._map[68] = "LeftShiftAssign";
            nodeType.LeftShiftAssign = 68;
            nodeType._map[69] = "ModuloAssign";
            nodeType.ModuloAssign = 69;
            nodeType._map[70] = "MultiplyAssign";
            nodeType.MultiplyAssign = 70;
            nodeType._map[71] = "OrAssign";
            nodeType.OrAssign = 71;
            nodeType._map[72] = "PowerAssign";
            nodeType.PowerAssign = 72;
            nodeType._map[73] = "RightShiftAssign";
            nodeType.RightShiftAssign = 73;
            nodeType._map[74] = "SubtractAssign";
            nodeType.SubtractAssign = 74;
            nodeType._map[75] = "AddAssignChecked";
            nodeType.AddAssignChecked = 75;
            nodeType._map[76] = "MultiplyAssignChecked";
            nodeType.MultiplyAssignChecked = 76;
            nodeType._map[77] = "SubtractAssignChecked";
            nodeType.SubtractAssignChecked = 77;
            nodeType._map[78] = "PreIncrementAssign";
            nodeType.PreIncrementAssign = 78;
            nodeType._map[79] = "PreDecrementAssign";
            nodeType.PreDecrementAssign = 79;
            nodeType._map[80] = "PostIncrementAssign";
            nodeType.PostIncrementAssign = 80;
            nodeType._map[81] = "PostDecrementAssign";
            nodeType.PostDecrementAssign = 81;
            nodeType._map[82] = "TypeEqual";
            nodeType.TypeEqual = 82;
            nodeType._map[83] = "OnesComplement";
            nodeType.OnesComplement = 83;
            nodeType._map[84] = "IsTrue";
            nodeType.IsTrue = 84;
            nodeType._map[85] = "IsFalse";
            nodeType.IsFalse = 85;
        })(expressions.nodeType || (expressions.nodeType = {}));
        var nodeType = expressions.nodeType;
    })(aftermath.expressions || (aftermath.expressions = {}));
    var expressions = aftermath.expressions;
})(aftermath || (aftermath = {}));
